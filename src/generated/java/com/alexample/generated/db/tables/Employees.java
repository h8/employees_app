/*
 * This file is generated by jOOQ.
*/
package com.alexample.generated.db.tables;


import com.alexample.generated.db.DefaultSchema;
import com.alexample.generated.db.Keys;
import com.alexample.generated.db.enums.EmployeesGender;
import com.alexample.generated.db.tables.records.EmployeesRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Employees extends TableImpl<EmployeesRecord> {

    private static final long serialVersionUID = 749675518;

    /**
     * The reference instance of <code>employees</code>
     */
    public static final Employees EMPLOYEES = new Employees();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmployeesRecord> getRecordType() {
        return EmployeesRecord.class;
    }

    /**
     * The column <code>employees.emp_no</code>.
     */
    public final TableField<EmployeesRecord, Integer> EMP_NO = createField("emp_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>employees.birth_date</code>.
     */
    public final TableField<EmployeesRecord, Date> BIRTH_DATE = createField("birth_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>employees.first_name</code>.
     */
    public final TableField<EmployeesRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(14).nullable(false), this, "");

    /**
     * The column <code>employees.last_name</code>.
     */
    public final TableField<EmployeesRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "");

    /**
     * The column <code>employees.gender</code>.
     */
    public final TableField<EmployeesRecord, EmployeesGender> GENDER = createField("gender", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(com.alexample.generated.db.enums.EmployeesGender.class), this, "");

    /**
     * The column <code>employees.hire_date</code>.
     */
    public final TableField<EmployeesRecord, Date> HIRE_DATE = createField("hire_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * Create a <code>employees</code> table reference
     */
    public Employees() {
        this("employees", null);
    }

    /**
     * Create an aliased <code>employees</code> table reference
     */
    public Employees(String alias) {
        this(alias, EMPLOYEES);
    }

    private Employees(String alias, Table<EmployeesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Employees(String alias, Table<EmployeesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmployeesRecord> getPrimaryKey() {
        return Keys.KEY_EMPLOYEES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmployeesRecord>> getKeys() {
        return Arrays.<UniqueKey<EmployeesRecord>>asList(Keys.KEY_EMPLOYEES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Employees as(String alias) {
        return new Employees(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Employees rename(String name) {
        return new Employees(name, null);
    }
}
